# Generated by Django 5.2.2 on 2025-07-07 23:00

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    replaces = [('inventory', '0001_initial'), ('inventory', '0002_sourceitem_common_name_sourceitem_cryptic_name_and_more'), ('inventory', '0003_alter_item_source_item_search_criteria'), ('inventory', '0004_unitsize_sourceitem_active_and_more'), ('inventory', '0005_sourceitem_subunit_size'), ('inventory', '0006_remove_item_unit_size_remove_sourceitem_discontinued_and_more'), ('inventory', '0007_alter_source_customer_number'), ('inventory', '0008_alter_orderlineitem_options_and_more'), ('inventory', '0009_order_order_number'), ('inventory', '0010_alter_orderlineitem_per_pack_weights_and_more'), ('inventory', '0011_alter_category_options_alter_unitsize_options_and_more')]

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('active', models.BooleanField(default=True)),
                ('customer_number', models.CharField(blank=True, default='', max_length=1024)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivered_date', models.DateField()),
                ('po_text', models.CharField(blank=True, max_length=255, null=True)),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='inventory.source')),
                ('notes', models.TextField(blank=True, default='', help_text='Is there anything noteworthy about this order but not a specific item?')),
                ('order_number', models.CharField(blank=True, default='', max_length=1024)),
            ],
        ),
        migrations.CreateModel(
            name='UnitSize',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit', models.CharField(help_text='oz, floz, lb, pint, gallon', max_length=1024)),
            ],
            options={
                'ordering': ['unit'],
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('source_item_search_criteria', models.JSONField(blank=True, help_text='overly complicated JSON object used to suggest this item for new source items.', null=True)),
                ('description', models.TextField(help_text="General description of the item and how it'd likely be used.")),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='inventory.category')),
            ],
        ),
        migrations.CreateModel(
            name='SourceItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.CharField(max_length=255)),
                ('source_category', models.CharField(help_text="probably won't agree with Item.category", max_length=255)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='inventory.item')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='inventory.source')),
                ('common_name', models.CharField(blank=True, default='', help_text='A more friendly version of the name.  This might be slang we use so not always Item.name', max_length=1024)),
                ('cryptic_name', models.CharField(default='', help_text='The horribly abbreviated and truncated name as it appears on the invoice.', max_length=1024)),
                ('expanded_name', models.CharField(blank=True, default='', help_text='The horribly abbreviated and truncated name but with as many of the abbreviations and truncations fixed.', max_length=1024)),
                ('extra_number', models.CharField(blank=True, default='', help_text='Some sources have a second identifying number/code.', max_length=255)),
                ('item_number', models.CharField(blank=True, default='', help_text='The main number/code used to identify this product at this source for this unit size.', max_length=255)),
                ('active', models.BooleanField(default=True, help_text='Products sometimes change their packaging.  This option allows the unit size to remain tied to the source item but no longer selectable.')),
                ('allow_split_pack', models.BooleanField(default=True, help_text="Can this package be split?  As in, '4x 1 gallon' be split and purchase '1x 1 gallon'?")),
                ('quantity', models.IntegerField(default=1, help_text='How many of the UnitSize is there in this package?')),
                ('unit_size', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.unitsize')),
                ('subunit_size', models.ForeignKey(blank=True, help_text='For when the box contains packs of multiple units.  Like a box with 8 packs of 6 pudding cups.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bob', related_query_name='bob', to='inventory.unitsize')),
                ('subunit_amount', models.DecimalField(blank=True, decimal_places=4, help_text="the quantity of subunits.  The '15.5' in '15.5floz'", max_digits=9, null=True)),
                ('subunit_amount_text', models.CharField(blank=True, help_text="An amount that isn't a single number.  Like '9-12#'.", max_length=255, null=True)),
                ('unit_amount', models.DecimalField(blank=True, decimal_places=4, help_text="the quantity of units.  The '15.5' in '15.5floz'", max_digits=9, null=True)),
                ('unit_amount_text', models.CharField(blank=True, help_text="An amount that isn't a single number.  Like '9-12#'.", max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OrderLineItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_ordered', models.IntegerField(default=1)),
                ('quantity_delivered', models.IntegerField(default=0)),
                ('remote_stock', models.BooleanField(default=False)),
                ('per_pack_price', models.DecimalField(decimal_places=4, max_digits=9)),
                ('extended_price', models.DecimalField(decimal_places=4, max_digits=9)),
                ('tax', models.DecimalField(decimal_places=4, default=0, max_digits=9)),
                ('per_weight_price', models.DecimalField(blank=True, decimal_places=4, max_digits=9, null=True)),
                ('per_pack_weights', models.JSONField(blank=True, default=list, null=True)),
                ('total_weight', models.DecimalField(blank=True, decimal_places=4, max_digits=9, null=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.order')),
                ('source_item', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='inventory.sourceitem')),
                ('damaged', models.BooleanField(default=False, help_text='Item damaged but not necessarily sent back.')),
                ('expect_backorder_delivery', models.BooleanField(default=False, help_text='Sysco substitutes out-of-stock items.  GemState sends them later.')),
                ('line_item_number', models.IntegerField(default=0, help_text='the ordering on the invoice')),
                ('notes', models.TextField(blank=True, default='', help_text='Anything remarkable about this specific item?')),
                ('rejected', models.BooleanField(default=False, help_text='Item sent back because of damage, incorrect, etc.')),
                ('rejected_reason', models.TextField(blank=True, help_text='Why was this item sent back?', null=True)),
            ],
            options={
                'ordering': ['line_item_number'],
            },
        ),
    ]
