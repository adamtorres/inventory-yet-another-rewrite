from django.contrib import admin

from . import models as mp_models

# Most of this was generated by ./manage.py admin_generator meal_planning
# Some customization happened after.

@admin.register(mp_models.Ingredient)
class IngredientAdmin(admin.ModelAdmin):
    list_display = (
        'id',
        'recipe',
        'ingredient_group',
        'name',
        'category',
        'unit_size',
        'unit_amount',
    )
    search_fields = ('name',)
    list_filter = ('ingredient_group__recipe',)


@admin.register(mp_models.IngredientGroup)
class IngredientGroupAdmin(admin.ModelAdmin):
    list_display = ('id', 'recipe', 'name')
    list_filter = ('recipe',)
    search_fields = ('name',)


@admin.register(mp_models.Rating)
class RatingAdmin(admin.ModelAdmin):
    list_display = ('id', 'recipe', 'value', 'created', 'comment')
    list_filter = ('recipe', 'created')


@admin.register(mp_models.Recipe)
class RecipeAdmin(admin.ModelAdmin):
    list_display = ('id', 'name', 'description', 'goes_with', 'recipe_type')
    search_fields = ('name',)
    list_filter = ('recipe_type',)
    actions = ["make_cookie", "make_entree", "make_side"]

    @admin.action(description="Mark selected recipes as cookie")
    def make_cookie(self, request, queryset):
        queryset.update(recipe_type=mp_models.RecipeType.objects.get(name="Cookie"))

    @admin.action(description="Mark selected recipes as entree")
    def make_entree(self, request, queryset):
        queryset.update(recipe_type=mp_models.RecipeType.objects.get(name="Entree"))

    @admin.action(description="Mark selected recipes as side")
    def make_side(self, request, queryset):
        queryset.update(recipe_type=mp_models.RecipeType.objects.get(name="Side"))


@admin.register(mp_models.RecipeMultiplier)
class RecipeMultiplierAdmin(admin.ModelAdmin):
    list_display = ('id', 'base_multiplier', 'comment', 'recipe')
    list_filter = ('recipe',)


@admin.register(mp_models.IngredientMultiplier)
class IngredientMultiplierAdmin(admin.ModelAdmin):
    list_filter = ('recipe_multiplier',)
    list_display = (
        'id',
        'recipe_multiplier',
        'ingredient',
        'unit_amount_adjustment',
    )


admin.site.register(mp_models.RecipeType)
admin.site.register(mp_models.ServingCount)
